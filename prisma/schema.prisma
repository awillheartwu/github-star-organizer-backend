// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

generator prismabox {
  provider     = "prismabox"
  output       = "../src/generated/prismabox"
  typebox      = true
  useJsonTypes = true
  inputModels  = true
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Project {
  id          String    @id @default(uuid()) // 主键，UUID
  githubId    Int       @unique // GitHub 项目的唯一 ID（来自 GitHub API）
  name        String // 仓库名称（如 star-organizer）
  fullName    String // 仓库全名（如 user/star-organizer）
  url         String // 仓库链接
  description String? // 项目描述
  language    String? // 主语言
  stars       Int       @default(0) // Star 数量
  forks       Int       @default(0) // Fork 数量
  lastCommit  DateTime? // 最后一次提交时间（可选）
  lastSyncAt  DateTime  @default(now()) // 最后同步时间

  // Custom info
  notes      String? // 用户备注
  favorite   Boolean     @default(false) // 是否标记为收藏
  archived   Boolean     @default(false) // 是否归档
  pinned     Boolean     @default(false) // 是否置顶
  score      Int? // 用户评分（可选）
  videoLinks VideoLink[] // 关联的视频链接（多对一）

  // Relations
  tags ProjectTag[] // 项目关联的标签（多对多）

  createdAt DateTime  @default(now()) // 创建时间
  updatedAt DateTime  @default(now()) @updatedAt // 更新时间（自动更新）
  deletedAt DateTime? // 软删除时间（可选）

  // 🔽 索引区（新增）
  @@index([archived, createdAt]) // 常用 where archived=false 排序 createdAt
  @@index([archived, updatedAt]) // 最近更新
  @@index([stars])
  @@index([forks])
  @@index([score])
  @@index([language])
  @@index([lastCommit])
  @@index([lastSyncAt])
  @@index([name]) // name 模糊匹配也有帮助（SQLite 里作用有限，但保留可读性）
}

model Tag {
  id          String       @id @default(uuid()) // 主键，UUID
  name        String // 标签名称（唯一） 修正,考虑软删,不再唯一
  description String? // 标签描述（可选）
  projects    ProjectTag[] // 拥有该标签的项目（多对多）

  archived  Boolean   @default(false) // 是否归档
  createdAt DateTime  @default(now()) // 创建时间
  updatedAt DateTime  @default(now()) @updatedAt // 更新时间（自动更新）
  deletedAt DateTime? // 软删除时间（可选）

  @@index([archived, createdAt]) // 常用 where archived=false 排序 createdAt
  @@index([name]) // name 模糊匹配也有帮助（SQLite 里作用有限，但保留可读性）
}

model ProjectTag {
  project   Project @relation(fields: [projectId], references: [id]) // 外键关联 Project
  projectId String

  tag   Tag    @relation(fields: [tagId], references: [id]) // 外键关联 Tag
  tagId String

  @@id([projectId, tagId]) // 联合主键，确保 project 与 tag 的唯一组合
  // 🔽 常用连接方向都建索引
  @@index([projectId])
  @@index([tagId])
}

model VideoLink {
  id        String  @id @default(uuid()) // 主键
  url       String // 视频链接
  project   Project @relation(fields: [projectId], references: [id]) // 所属项目
  projectId String // 外键

  archived  Boolean   @default(false) // 是否归档
  createdAt DateTime  @default(now()) // 创建时间
  updatedAt DateTime  @default(now()) @updatedAt // 更新时间（自动更新）
  deletedAt DateTime? // 软删除时间（可选）

  @@index([projectId])
  @@index([archived, createdAt]) // 常用 where archived=false 排序 createdAt
}

enum UserRole {
  USER
  ADMIN
}

model User {
  id           String   @id @default(uuid())
  email        String   @unique
  passwordHash String
  displayName  String?
  role         UserRole @default(USER)

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  refreshTokens RefreshToken[]

  @@index([createdAt])
}

model RefreshToken {
  id     String @id @default(uuid())
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  // 只存哈希（避免明文落库）
  tokenHash String @unique
  jti       String @unique

  revoked           Boolean  @default(false)
  replacedByTokenId String?
  expiresAt         DateTime
  createdAt         DateTime @default(now())

  ip        String?
  userAgent String?

  @@index([userId])
  @@index([revoked, expiresAt])
}
